/* reset css */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    display: flex;
    /* partage l'espace disponible */
    justify-content: space-around;
    align-items: center;
    flex-direction: column;
    /* je donne une hauteur à ma page */
    height: 60vh;
}

/* fisrt animation */
.slide-line{
    font-family: sans-serif;
    font-size: 50px;
    text-decoration: none;
    color: #222;
    /* on met un position relative pour avoir une référence pour ses enfants */
    position: relative;
}

/* ------------------------ animation 1 : soulignement glissé --------------------------- */
.slide-line::before{
    /* on instancie un contenu vide */
    content: "";
    /* la position absolue de l'élément relatif */
    position:absolute;
    background-color: #222;
    width: 100%;
    height: 3px;
    bottom: 0;
    /* permet de placer le point de transformation - 100% sur x veut dire au bout de la ligne des X donc le E de explore */
    /* rien n'empêche d'aller plus loin que 100%  */
    transform-origin: 100% 0;
    /* je demande à ma ligne de représenter 0% de ma ligne (donc elle disparait) */
    transform: scaleX(0);
    transition: transform 0.4s;
}

/* quand on va hover, alors la pseudo class before */
.slide-line:hover::before{
    /* je demande en hover à ma ligne de démarrer à gauche */
    transform-origin: 0 0;
    /* et de rejoindre la droite */
    transform: scaleX(1);
}


/* ------------------------ animation 2 défile texte --------------------------- */
.slide-link{
    /* comme on va faire bouger des éléments sur la ligne mais qu'on veut qu'ils disparaissent
    on ne souhaite pas créer une barre latérale
    */
    overflow: hidden;
    position: relative;
    font-size: 50px;
    color: #222;
}

.slide-link span{
    padding: 10px;
    /* de base les span sont des élément inline, mais pour utiliser transform il leur faut la propriété block
    on fait donc un mélange des deux  */
    display: inline-block;
    transition: transform 0.3s ease-out;
}

/* je sélectionne le 2ème élément span */
.slide-link span:nth-child(2){
    position: absolute;
    width: 100%;
    text-align: center;
    /* je pousse l'élement sur la gauche mais il est invisible car overflow hidden  */
    left: 100%;
}

.slide-link:hover span{
    /* -100% = je pousse l'élément à gauche */
    transform: translateX(-100%);
}


/* ------------------------ animation 3 défile texte --------------------------- */
.two-lines{
    font-size: 50px;
    text-decoration: none;
    position: relative;
    color: #222;   
}
.two-lines::before, .two-lines::after{
    content: "";
    position: absolute;
    height: 2px;
    background-color: #222;
    /* opacity 0 au départ pour qu'elles soient invisibles */
    opacity: 0;
    /* left 50% et translate -50% pour centrer parfaitement */
    left: 50%;
    transform: translate(-50%, 10px);
    transition: all 0.2s ease-in-out;
}
.two-lines::before{
    /* une ligne plus large que l'autre */
    width: 90%;
    bottom: 0;
}
.two-lines::after{
    /* une ligne plus petite que l'autre */
    width: 60%;
    bottom: -7px;
}
/* quand on va hover ... */
.two-lines:hover::before, .two-lines:hover::after{
    /* on redonne la visibilité aux élément en transition 0.2s */
    opacity: 1;
    /* on remonte les lignes grâce au 0px */
    transform: translate(-50%, 0px);
}
